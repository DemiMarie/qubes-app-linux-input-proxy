#!/usr/bin/python3
#
# Trigger start qubes-input-* services for input mouse/key devices.
# Used at dom0/GuiVM startup with real GPU passthrough (sys-gui-gpu)


import subprocess
import os
import sys
from stat import *

eventFiles = os.listdir("/dev/input")
for input_dev in eventFiles:
    if 'event' in input_dev:  # if filename contains 'event'
        eventFile = os.path.join("/dev/input", input_dev)
        if S_ISCHR(os.stat(eventFile).st_mode) != 0:  # is character device?
            udevreturn = subprocess.check_output([
                "udevadm", "info", "--query=property", "--name=" + eventFile]).decode()
            # The ID_SERIAL_SHORT here corresponds to qemu-emulated tablet
            # device for HVM which is static. It allows to attach another tablet
            # for example when using KVM for tests
            if '/devices/virtual/' or 'ID_SERIAL_SHORT=28754-0000:00:05.0-1' in udevreturn:
                continue
            service = None
            if (('ID_INPUT_TABLET' in udevreturn) or (
                    'ID_INPUT_TOUCHSCREEN' in udevreturn) or (
                        'ID_INPUT_TOUCHPAD' in udevreturn)) and 'ID_INPUT_KEY' not in udevreturn:
                service = 'qubes-input-sender-tablet'
            elif 'ID_INPUT_MOUSE' in udevreturn and 'ID_INPUT_KEY' not in udevreturn:
                service = 'qubes-input-sender-mouse'
            elif 'ID_INPUT_KEY' in udevreturn and 'ID_INPUT_MOUSE' not in udevreturn:
                service = 'qubes-input-sender-keyboard'
            elif 'ID_INPUT_MOUSE' in udevreturn and 'ID_INPUT_KEY' in udevreturn:
                service = 'qubes-input-sender-keyboard-mouse'

            if service:
                service = '{}@{}.service'.format(service, input_dev)
                subprocess.call([
                    "sudo", "/bin/systemctl", "--no-block",
                    "start", service])
